/* soapBasicHttpBinding_USCOREIFoxlinkAddProxy.cpp
   Generated by gSOAP 2.8.22 from foxlinkadd.h

Copyright(C) 2000-2015, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapBasicHttpBinding_USCOREIFoxlinkAddProxy.h"

BasicHttpBinding_USCOREIFoxlinkAddProxy::BasicHttpBinding_USCOREIFoxlinkAddProxy()
{	this->soap = soap_new();
	this->soap_own = true;
	BasicHttpBinding_USCOREIFoxlinkAddProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

BasicHttpBinding_USCOREIFoxlinkAddProxy::BasicHttpBinding_USCOREIFoxlinkAddProxy(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	BasicHttpBinding_USCOREIFoxlinkAddProxy_init(_soap->imode, _soap->omode);
}

BasicHttpBinding_USCOREIFoxlinkAddProxy::BasicHttpBinding_USCOREIFoxlinkAddProxy(const char *url)
{	this->soap = soap_new();
	this->soap_own = true;
	BasicHttpBinding_USCOREIFoxlinkAddProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

BasicHttpBinding_USCOREIFoxlinkAddProxy::BasicHttpBinding_USCOREIFoxlinkAddProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	BasicHttpBinding_USCOREIFoxlinkAddProxy_init(iomode, iomode);
}

BasicHttpBinding_USCOREIFoxlinkAddProxy::BasicHttpBinding_USCOREIFoxlinkAddProxy(const char *url, soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	BasicHttpBinding_USCOREIFoxlinkAddProxy_init(iomode, iomode);
	soap_endpoint = url;
}

BasicHttpBinding_USCOREIFoxlinkAddProxy::BasicHttpBinding_USCOREIFoxlinkAddProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	BasicHttpBinding_USCOREIFoxlinkAddProxy_init(imode, omode);
}

BasicHttpBinding_USCOREIFoxlinkAddProxy::~BasicHttpBinding_USCOREIFoxlinkAddProxy()
{	if (this->soap_own)
		soap_free(this->soap);
}

void BasicHttpBinding_USCOREIFoxlinkAddProxy::BasicHttpBinding_USCOREIFoxlinkAddProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"tempuri", "http://tempuri.org/", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this->soap, namespaces);
}

void BasicHttpBinding_USCOREIFoxlinkAddProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void BasicHttpBinding_USCOREIFoxlinkAddProxy::reset()
{	destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	BasicHttpBinding_USCOREIFoxlinkAddProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void BasicHttpBinding_USCOREIFoxlinkAddProxy::soap_noheader()
{	this->soap->header = NULL;
}

const SOAP_ENV__Header *BasicHttpBinding_USCOREIFoxlinkAddProxy::soap_header()
{	return this->soap->header;
}

const SOAP_ENV__Fault *BasicHttpBinding_USCOREIFoxlinkAddProxy::soap_fault()
{	return this->soap->fault;
}

const char *BasicHttpBinding_USCOREIFoxlinkAddProxy::soap_fault_string()
{	return *soap_faultstring(this->soap);
}

const char *BasicHttpBinding_USCOREIFoxlinkAddProxy::soap_fault_detail()
{	return *soap_faultdetail(this->soap);
}

int BasicHttpBinding_USCOREIFoxlinkAddProxy::soap_close_socket()
{	return soap_closesock(this->soap);
}

int BasicHttpBinding_USCOREIFoxlinkAddProxy::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

void BasicHttpBinding_USCOREIFoxlinkAddProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void BasicHttpBinding_USCOREIFoxlinkAddProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *BasicHttpBinding_USCOREIFoxlinkAddProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int BasicHttpBinding_USCOREIFoxlinkAddProxy::CheckRuleSN(const char *endpoint, const char *soap_action, _tempuri__CheckRuleSN *tempuri__CheckRuleSN, _tempuri__CheckRuleSNResponse &tempuri__CheckRuleSNResponse)
{	struct soap *soap = this->soap;
	struct __tempuri__CheckRuleSN soap_tmp___tempuri__CheckRuleSN;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.223.224:1001/Service_FoxlinkAdd/FoxlinkAdd.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IFoxlinkAdd/CheckRuleSN";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___tempuri__CheckRuleSN.tempuri__CheckRuleSN = tempuri__CheckRuleSN;
	soap_set_version(soap, 1); /* SOAP1.1 */
	soap_serializeheader(soap);
	soap_serialize___tempuri__CheckRuleSN(soap, &soap_tmp___tempuri__CheckRuleSN);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__CheckRuleSN(soap, &soap_tmp___tempuri__CheckRuleSN, "-tempuri:CheckRuleSN", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__CheckRuleSN(soap, &soap_tmp___tempuri__CheckRuleSN, "-tempuri:CheckRuleSN", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&tempuri__CheckRuleSNResponse)
		return soap_closesock(soap);
	tempuri__CheckRuleSNResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__CheckRuleSNResponse.soap_get(soap, "tempuri:CheckRuleSNResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BasicHttpBinding_USCOREIFoxlinkAddProxy::COMMAND_USCORECODE(const char *endpoint, const char *soap_action, _tempuri__COMMAND_USCORECODE *tempuri__COMMAND_USCORECODE, _tempuri__COMMAND_USCORECODEResponse &tempuri__COMMAND_USCORECODEResponse)
{	struct soap *soap = this->soap;
	struct __tempuri__COMMAND_USCORECODE soap_tmp___tempuri__COMMAND_USCORECODE;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.223.224:1001/Service_FoxlinkAdd/FoxlinkAdd.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IFoxlinkAdd/COMMAND_CODE";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___tempuri__COMMAND_USCORECODE.tempuri__COMMAND_USCORECODE = tempuri__COMMAND_USCORECODE;
	soap_set_version(soap, 1); /* SOAP1.1 */
	soap_serializeheader(soap);
	soap_serialize___tempuri__COMMAND_USCORECODE(soap, &soap_tmp___tempuri__COMMAND_USCORECODE);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__COMMAND_USCORECODE(soap, &soap_tmp___tempuri__COMMAND_USCORECODE, "-tempuri:COMMAND_CODE", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__COMMAND_USCORECODE(soap, &soap_tmp___tempuri__COMMAND_USCORECODE, "-tempuri:COMMAND_CODE", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&tempuri__COMMAND_USCORECODEResponse)
		return soap_closesock(soap);
	tempuri__COMMAND_USCORECODEResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__COMMAND_USCORECODEResponse.soap_get(soap, "tempuri:COMMAND_CODEResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BasicHttpBinding_USCOREIFoxlinkAddProxy::UpdateSMTSteelNet(const char *endpoint, const char *soap_action, _tempuri__UpdateSMTSteelNet *tempuri__UpdateSMTSteelNet, _tempuri__UpdateSMTSteelNetResponse &tempuri__UpdateSMTSteelNetResponse)
{	struct soap *soap = this->soap;
	struct __tempuri__UpdateSMTSteelNet soap_tmp___tempuri__UpdateSMTSteelNet;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.223.224:1001/Service_FoxlinkAdd/FoxlinkAdd.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IFoxlinkAdd/UpdateSMTSteelNet";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___tempuri__UpdateSMTSteelNet.tempuri__UpdateSMTSteelNet = tempuri__UpdateSMTSteelNet;
	soap_set_version(soap, 1); /* SOAP1.1 */
	soap_serializeheader(soap);
	soap_serialize___tempuri__UpdateSMTSteelNet(soap, &soap_tmp___tempuri__UpdateSMTSteelNet);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__UpdateSMTSteelNet(soap, &soap_tmp___tempuri__UpdateSMTSteelNet, "-tempuri:UpdateSMTSteelNet", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__UpdateSMTSteelNet(soap, &soap_tmp___tempuri__UpdateSMTSteelNet, "-tempuri:UpdateSMTSteelNet", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&tempuri__UpdateSMTSteelNetResponse)
		return soap_closesock(soap);
	tempuri__UpdateSMTSteelNetResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__UpdateSMTSteelNetResponse.soap_get(soap, "tempuri:UpdateSMTSteelNetResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BasicHttpBinding_USCOREIFoxlinkAddProxy::UpdateSMTSteelNet2(const char *endpoint, const char *soap_action, _tempuri__UpdateSMTSteelNet2 *tempuri__UpdateSMTSteelNet2, _tempuri__UpdateSMTSteelNet2Response &tempuri__UpdateSMTSteelNet2Response)
{	struct soap *soap = this->soap;
	struct __tempuri__UpdateSMTSteelNet2 soap_tmp___tempuri__UpdateSMTSteelNet2;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.223.224:1001/Service_FoxlinkAdd/FoxlinkAdd.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IFoxlinkAdd/UpdateSMTSteelNet2";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___tempuri__UpdateSMTSteelNet2.tempuri__UpdateSMTSteelNet2 = tempuri__UpdateSMTSteelNet2;
	soap_set_version(soap, 1); /* SOAP1.1 */
	soap_serializeheader(soap);
	soap_serialize___tempuri__UpdateSMTSteelNet2(soap, &soap_tmp___tempuri__UpdateSMTSteelNet2);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__UpdateSMTSteelNet2(soap, &soap_tmp___tempuri__UpdateSMTSteelNet2, "-tempuri:UpdateSMTSteelNet2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__UpdateSMTSteelNet2(soap, &soap_tmp___tempuri__UpdateSMTSteelNet2, "-tempuri:UpdateSMTSteelNet2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&tempuri__UpdateSMTSteelNet2Response)
		return soap_closesock(soap);
	tempuri__UpdateSMTSteelNet2Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__UpdateSMTSteelNet2Response.soap_get(soap, "tempuri:UpdateSMTSteelNet2Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BasicHttpBinding_USCOREIFoxlinkAddProxy::BatchBack(const char *endpoint, const char *soap_action, _tempuri__BatchBack *tempuri__BatchBack, _tempuri__BatchBackResponse &tempuri__BatchBackResponse)
{	struct soap *soap = this->soap;
	struct __tempuri__BatchBack soap_tmp___tempuri__BatchBack;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.223.224:1001/Service_FoxlinkAdd/FoxlinkAdd.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IFoxlinkAdd/BatchBack";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___tempuri__BatchBack.tempuri__BatchBack = tempuri__BatchBack;
	soap_set_version(soap, 1); /* SOAP1.1 */
	soap_serializeheader(soap);
	soap_serialize___tempuri__BatchBack(soap, &soap_tmp___tempuri__BatchBack);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__BatchBack(soap, &soap_tmp___tempuri__BatchBack, "-tempuri:BatchBack", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__BatchBack(soap, &soap_tmp___tempuri__BatchBack, "-tempuri:BatchBack", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&tempuri__BatchBackResponse)
		return soap_closesock(soap);
	tempuri__BatchBackResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__BatchBackResponse.soap_get(soap, "tempuri:BatchBackResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BasicHttpBinding_USCOREIFoxlinkAddProxy::saveSingleReworkResult(const char *endpoint, const char *soap_action, _tempuri__saveSingleReworkResult *tempuri__saveSingleReworkResult, _tempuri__saveSingleReworkResultResponse &tempuri__saveSingleReworkResultResponse)
{	struct soap *soap = this->soap;
	struct __tempuri__saveSingleReworkResult soap_tmp___tempuri__saveSingleReworkResult;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.223.224:1001/Service_FoxlinkAdd/FoxlinkAdd.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IFoxlinkAdd/saveSingleReworkResult";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___tempuri__saveSingleReworkResult.tempuri__saveSingleReworkResult = tempuri__saveSingleReworkResult;
	soap_set_version(soap, 1); /* SOAP1.1 */
	soap_serializeheader(soap);
	soap_serialize___tempuri__saveSingleReworkResult(soap, &soap_tmp___tempuri__saveSingleReworkResult);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__saveSingleReworkResult(soap, &soap_tmp___tempuri__saveSingleReworkResult, "-tempuri:saveSingleReworkResult", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__saveSingleReworkResult(soap, &soap_tmp___tempuri__saveSingleReworkResult, "-tempuri:saveSingleReworkResult", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&tempuri__saveSingleReworkResultResponse)
		return soap_closesock(soap);
	tempuri__saveSingleReworkResultResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__saveSingleReworkResultResponse.soap_get(soap, "tempuri:saveSingleReworkResultResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BasicHttpBinding_USCOREIFoxlinkAddProxy::Check_USCORELogin(const char *endpoint, const char *soap_action, _tempuri__Check_USCORELogin *tempuri__Check_USCORELogin, _tempuri__Check_USCORELoginResponse &tempuri__Check_USCORELoginResponse)
{	struct soap *soap = this->soap;
	struct __tempuri__Check_USCORELogin soap_tmp___tempuri__Check_USCORELogin;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.223.224:1001/Service_FoxlinkAdd/FoxlinkAdd.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IFoxlinkAdd/Check_Login";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___tempuri__Check_USCORELogin.tempuri__Check_USCORELogin = tempuri__Check_USCORELogin;
	soap_set_version(soap, 1); /* SOAP1.1 */
	soap_serializeheader(soap);
	soap_serialize___tempuri__Check_USCORELogin(soap, &soap_tmp___tempuri__Check_USCORELogin);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__Check_USCORELogin(soap, &soap_tmp___tempuri__Check_USCORELogin, "-tempuri:Check_Login", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__Check_USCORELogin(soap, &soap_tmp___tempuri__Check_USCORELogin, "-tempuri:Check_Login", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&tempuri__Check_USCORELoginResponse)
		return soap_closesock(soap);
	tempuri__Check_USCORELoginResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__Check_USCORELoginResponse.soap_get(soap, "tempuri:Check_LoginResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int BasicHttpBinding_USCOREIFoxlinkAddProxy::SaveTestData(const char *endpoint, const char *soap_action, _tempuri__SaveTestData *tempuri__SaveTestData, _tempuri__SaveTestDataResponse &tempuri__SaveTestDataResponse)
{	struct soap *soap = this->soap;
	struct __tempuri__SaveTestData soap_tmp___tempuri__SaveTestData;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://192.168.223.224:1001/Service_FoxlinkAdd/FoxlinkAdd.svc";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/IFoxlinkAdd/SaveTestData";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___tempuri__SaveTestData.tempuri__SaveTestData = tempuri__SaveTestData;
	soap_set_version(soap, 1); /* SOAP1.1 */
	soap_serializeheader(soap);
	soap_serialize___tempuri__SaveTestData(soap, &soap_tmp___tempuri__SaveTestData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tempuri__SaveTestData(soap, &soap_tmp___tempuri__SaveTestData, "-tempuri:SaveTestData", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tempuri__SaveTestData(soap, &soap_tmp___tempuri__SaveTestData, "-tempuri:SaveTestData", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&tempuri__SaveTestDataResponse)
		return soap_closesock(soap);
	tempuri__SaveTestDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tempuri__SaveTestDataResponse.soap_get(soap, "tempuri:SaveTestDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
